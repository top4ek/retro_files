			Часы реального времени

				   I

	Часы   реального   времени  собраны  на  специализированной  микросхеме
КР512ВИ1.  Эта  микросхема имеет  режимы календаря, часов и будильника, а также
ОЗУ общего назначения 50 байт.
	Питание часов может осуществляться как от ПЭВМ, так и от внешнего исто-
чника напряжения 3-6 вольт.  Схема,  по которой собраны часы, предполагает воз-
можность одновременного подключения  питания  от  ПЭВМ и от внешнего источника.
Если питание осуществляется только от ПЭВМ, то при включении машины нужно будет
каждый раз устанавливать показания часов.  Если  питание подается и от внешнего
источника (батарейка, аккумулятор), то во время  работы  ПЭВМ батарейка практи-
чески  не  расходуется, а когда ПЭВМ отключена, расходуется  очень  экономично,
поскольку  м/сх ВИ1 работает в этом случае в режиме хранения информации - самом
экономичном режиме (ток потребления - 50 мкА). В качестве батареи подойдет все,
что угодно - пальчиковые и квадратные батарейки, плоские аккумуляторы.
	Лучше всего часы спрятать внутрь ПЭВМ - параллельно системному раз"ему.
Но можете и так втыкать их в системный раз"ем - контакты на плате часов замеча-
тельно в него входят. Только не перепутайте - на плате всего 41 контакт, с 1-го
по 41-й  (на плате номера крайних контактов указаны, 1-й - со стороны м/с ЛА2).
	Как  работают  эти  часы?  При  подаче питания на них они, естественно,
устанавливаются случайным образом.  Значит, первое, что нужно сделать - устано-
вить текущие показания часов.  После  этого они уже сами будут все делать, пока
им подается питание.  Задача компьютера только в том, чтобы считывать показания
часов и выводить их на экран.  Поэтому разберемся, как устроены часы в програм-
мном отношении.
	Для  программиста  часы - это 64 ячейки памяти, имеющие адреса от 00 до
3FH. И два порта: 20H - сюда записывается адрес ячейки памяти часов, 21H - дан-
ные этой ячейки. В общем виде картина такая - чтобы записать информацию в часы,
нужно в порт адреса  (20H)  послать  адрес ячейки, в которую Вы хотите записать
данные, затем в порт данных (21H) послать данные для этой ячейки. Чтобы считать
информацию к-либо ячейки часов,  посылаем  в  порт  адреса ее адрес, а из порта
данных считываем данные. Пример:
	MVI	A,4	; 04 - адрес ячейки, хранящей показания часов
	OUT	20H	; сообщаем м/схеме, что будем работать с этой ячейкой
	IN	21H	; берем данные из нее
	CALL	0F815H	; выводим на экран
	MVI 	A,2	; 02 - адрес ячейки, хранящей показания минут
	OUT	20H	; сообщаем ...
	IN 	21H	; берем данные (минуты)
	CALL 	0F815H	; выводим на экран
	JMP	0	; возвращаемся в монитор.

	MVI 	A,2	; 02 - ячейка минут
	OUT	20H	;
	MVI	A,33H	; новые показания
	OUT	21H	; записываем в эту ячейку

	Как видите, все довольно просто. Правда, чтобы записать информацию в
часы,  нужно чуток по-другому начать. Кроме того, при первом включении часов
нужно  их  инициализировать. Как это делать, разберем после блока справочной
информации.

				II

	Распределение памяти микросхемы КР512ВИ1.
------------------------------------
Адрес		Данные
------------------------------------
00H		Секунды
01H		Секунды (будильник)
02H		Минуты
03H		Минуты  (будильник)
04H		Часы
05H		Часы    (будильник)
06H		День недели
07H		День месяца
08H		Месяц
09H		Год
------------------------------------
0AH		Регистр А
0BH		Регистр В
0CH		Регистр С
0DH		Регистр D
------------------------------------
с 0EH		ОЗУ общего
по 3FH		назначения

	Возможны запись и чтение любой ячейки часов, за исключением:
- по адресам 0CH, 0DH - только чтение;
- старшие разряды по адресам 00 и 0AH можно только считывать.
	Как обращаться  с ячейками по адресам 00 - 09 (календарь, часы, будиль-
ник) рассмотрено выше. Больше никаких секретов нет. Точно так же записываются и
считываются данные из  ОЗУ  общего  назначения (0EH - 3FH). Разница лишь в том,
что это ОЗУ - Ваше и то, что Вы туда записали, часам "до фени", а с тем, что Вы
пошлете в ячейки 00 - 09, часы работают. Там информация все время меняется.
	Остаются регистры A, B, C, D. Что это за звери? Эти регистры предназна-
чены для управления работой м/схемы и анализа ее состояния.

			Регистр А

Формат байта : D7  D6  D5  D4  D3  D2  D1  D0
	          ----------  --------------
 	       UIP    DV            RS

UIP - единица в этом разряде ознаает,  что происходит обновление информации о
времени. В этот момент считывание  информации  даст неопределенный результат,
поэтому корректное обращение выглядит так:
NOYET:	MVI 	A,0AH	;обращаемся
	OUT 	20H	;к регистру А
	IN	21H	;считываем из него байт
	RAL		;выделяем старший разряд - UIP
	JC	NOYET	;если он ненулевой - ждем

DV - часы могут работать с разными часовыми кварцами. Но по нескольким парамет-
рам  (стоимость, доступность, экономичность)  лучше всего кварц на 32768 Гц. Он
кодируется : 0 1 0

RS - устанавливает  частоту сигнала на выходе SQW и период повторения периоди-
ческих прерываний  с выхода IRQ.  IRQ = 1000/SQW. Напр., частота на выходе SQW
равна 256 Гц, период прерываний равен 1000/256 = 3,9 мс (милисекунд).
D3 D2 D1 D0     частота, Гц     период, мс
 0  0  1  1     8192		0,122
 0  1  0  0     4096		0,244
 0  1  0  1     2048		0,488
........
 1  1  1  0        4		250
 1  1  1  1        2		500

Выход SQW - это 23 вывод м/сх ВИ1.  Чаще  всего используется для подачи сигнала
от будильника. Выход IRQ - 19 вывод м/сх. Используется как сигнал выдачи преры-
вания либо по постоянной частоте (как определено выше), либо по окончании цикла
обновления, либо от будильника.

			Регистр В

Формат байта :  D7   D6   D5   D4   D3   D2   D1   D0
		SET  PIE  AIE  UIE SQWE  DM 24/12  0

SET - единица  в  этом разряде запрещает обновление, давая возможность записать
в регистры времени начальные значения. После этого необходимо записать 0 в этот
разряд - включить цикл обновления.
PIE - разрешение прерываний с периодом, задаваемым разрядами RS регистра А.
Может быть сброшен сигналом RESET. Подать сигнал RESET - это значит подать 0 на
18 вывод м/сх ВИ1.
AIE - разрешение  прерываний  от будильника. Может бать сброшен сигналом RESET.
UIE - разрешение прерываний  по  окончании цикла обновления. Может быть сброшен
сигналом RESET.
SQWE - разрешение  выдачи  сигнала на выход SQW. М/быть сброшен сигналом RESET.
DM - единица в этом разряде  означает, что данные о времени и дате представлены
в двоичном виде, 0 - в двоично-десятичном.  Значение этого разряда нельзя изме-
нять без повторной записи начальных значений в ячейки времени и календаря.
24/12 - устанавливает 24-часовой (1)  или 12-часовой (0) режим счета времени. В
12-часовом режиме время после полудня отмечается единицей в старшем разряде ре-
гистра часов (адрес 04).

	Этой информации уже достаточно,  чтобы инициализировать микросхему. Для
этого в регистр А нужно записать байт 0010ХХХХ, например, 26H. Здесь важно дать
понять часам, что к ним подключен кварц 32768 Гц, а не какой-либо другой. Затем
в регистр В пишем 1ХХХХ010, например, 82H.  Здесь  важно  установить  SET  в  1
(поскольку  следом  мы будем записывать данные в регистры времени), дать понять
м/сх, что данные  представлены  в  дв.-дес.  виде и работать нужно в 24-часовом
режиме. Остальное пока безразлично. Вот вполне рабочий вариант пуска часов:
	MVI 	A,0AH
	OUT 	20H
	MVI 	A,26H
	OUT 	21H
	MVI 	A,0BH
	OUT	20H
	MVI 	A,82H
	OUT	21H
	.....
	программируем регистры времени
	.....
	MVI	A,0BH
	OUT	20H
	MVI	A,02H	;сбрасываем разряд SET в 0,
	OUT	21H	;чтобы часы затикали

Все, часы заработали, можно ими пользоваться.

			Регистр С

Формат байта :   D7  D6  D5  D4  D3  D2  D1  D0
		IRQF PF  AF  UF  0   0   0   0

IRQF - флаг запроса прерываний.  Устанавливается  в "1" при выполнении условия:
PFxPIE+AFxAIE+UFxUIE = 1.  Одновременно  с  установкой IRQF = 1 на контакте IRQ
устанавливается низкий уровень.  Флаг  сбрасывается  после чтения региста С или
сигналом RESET.
PF - устанавливается в 1 фронтом сигнала  на выходе внутреннего делителя часто-
ты, выбранном в соответствии с разрядами RS регистра А. Флаг сбрасывается после
чтения регистра С или сигналом RESET.
AF - устанавливается в 1  при совпадении текущего времени с временем, указанным
в регистрах будильника; сбрасывается после чтения регистра С или сигн. RESET.
UF - устанавливается в 1 после окончания каждого цикла обновления; сбрасывается
после чтения регистра С или сигналом RESET.

			Регистр D

	Здесь  работает  лишь  один  старший  разряд,  в остальных всегда нули.
В  старшем  разряде  устанавливается 0, если было любое,  даже  кратковременное
отключение  питания  микросхемы.  Единица  устанавливается  только  считыванием
регистра  D.  Таким  образом,  если  Вы усекли 0 в старшем разряде регистра D -
знайте, что информация в часах наверняка неверная, ибо их отключали.

				III

	Итак, почти вся необходимая информация у Вас есть. Остались мелочи.
	Дни недели  кодируются  так:  1 - понедельник, 2 - вторник и т.д.  Год
задается двумя младшими цифрами, например,  1994  год записывается как 94. Все
значения должны заноситься в формате, установленном в соответствующих разрядах
регистра В. Например, десятичному числу 11 соответствует 00001011 (0ВН) в дво-
ичном и 00010001 (11Н) в двоично-десятичном формате.
	Каждую секунду м/сх КР512ВИ1 обновляет информацию о времени (первый раз
обновление  произойдет спустя 0.5 сек. после записи нуля в старший разряд реги-
стра В).
	Внутренняя логика микросхемы  автоматически учитывает количество дней в
месяце, различая високосные и невисокосные годы. Однако программист обязан пра-
вильно задать начальные значения. Это относится не только к дате, но и к другим
величинам. Нельзя, например, в ячейку минут записывать число, большее 59.
	Одновременно с обновлением информации о времени заданное время срабаты-
вания будильника сравнивается с текущим. Следует иметь в виду, что если в любую
из ячеек будильника записан код,  содержащий  единицы  в  двух старших разрядах
(0C0H...0FFH) она переходит в безразличное состояние и не учитывается при срав-
нении с текущим временем. Например, если записать  код  безразличного состояния
по адресу 05Н, то будильник будет срабатывать  в заданную минуту и секунду каж-
дого часа.
	После  считывания регистра С все его разряды автоматически сбрасываются
в ноль. Единицы  в  этих разрядах появляются вновь после очередного наступления
соответствующих  событий  и  будут сохраняться только до следующего считывания.
Так что если необходимо неоднократно анализировать состояние различных разрядов
этого регистра, то после считывания нужно сохранить его копию и затем проверять
отдельные разряды копии.

	В заключение рассмотрим схему подачи звукового сигнала при срабатывании
будильника. Для того, чтобы эта схема срабатывала,  в  регистр  В  должны  быть
записаны единицы в разряды AIE и SQWE и нули в разряды UIE и PIE. Желаемая  вы-
сота  звука  (частота  сигнала на выводе SQW) задается разрядами RS регистра А.
При совпадении заданного  времени срабатывания будильника с текущим временем на
13-m выв. м/с ЛЕ5 (точка  S на плате часов) появляется сигнал заданной частоты.
Его длительность определяется  цепочкой  R8C5. На плате R8 и C5 не установлены.
Рекомендуется R8 - 22 Mом, C5 - 1 мкф.  Чтобы  сигнал  оборвать  в любое время,
можно добавить кнопку параллельно конденсатору C5.
